@model AccountSettingsModel
@{
	ViewBag.ActiveTab = "AccountSettings";
}


@section Header {
	<h1>Account Settings</h1>
}

<div class="row">
	<div class="span14">
		@using (Html.BeginForm(MVC.Account.Settings(), FormMethod.Post, new { id = "editForm" })) {
			foreach (var e in ViewData.ModelState.SelectMany(x => x.Value.Errors).Distinct()) {
				<div class="alert-message error">
					@e.ErrorMessage
				</div>
			}

			<div class="clearfix">
				<label>Username</label>
				<div class="input">
					<span class="uneditable-input span4">@Model.Username</span>
				</div>
			</div>
			<div class="clearfix">
				<label>Roles</label>
				<div class="input">
					<span class="uneditable-input span4">@string.Join(", ", Model.Roles.OrderBy(r => r))</span>
				</div>
			</div>

			<div class="clearfix">
				<label for="@Html.GetFieldId(m => m.Password)">Change Password</label>
				<div class="input">
					@Html.PasswordFor(m => m.Password, new { @class = "span3", id = "passwordTextbox", value = Model.Password })
				</div>
			</div>

			<div class="clearfix">
				<label for="@Html.GetFieldId(m => m.PasswordConfirm)">Confirm Password</label>
				<div class="input">
					@Html.PasswordFor(m => m.PasswordConfirm, new { @class = "span3", id = "confirmPasswordTextbox", value = Model.PasswordConfirm })
				</div>
			</div>

			<div class="actions">
				<input type="submit" class="btn primary" value="Save Changes" id="saveButton" />
				<a href="@Url.Action(MVC.Home.Index())" class="btn">Cancel</a>
			</div>
		}
	</div>
</div>

<script type="text/javascript">
	function addError(text, input) {
		input.closest('.clearfix').addClass('error');
		$('<span class="help-inline errorHelp"></span>').text(text).appendTo(input.closest('.input'));
	}

	$('#editForm').submit(function() {
		$('.error').removeClass('error');
		$('.errorHelp').remove();

		var newPassword = $('#passwordTextbox').val(), confirmedPassword = $('#confirmPasswordTextbox').val();
		if (newPassword === '') {
			addError('You must specify the password.', $('#passwordTextbox'));
			return false;
		}
		if (newPassword.match(/^ /) || newPassword.match(/ $/)) {
			addError('The password cannot start or end with a space.', $('#passwordTextbox'));
			return false;
		}
		if (confirmedPassword === '') {
			addError('You must confirm the password.', $('#confirmPasswordTextbox'));
			return false;
		}
		if (newPassword !== confirmedPassword) {
			addError('The passwords do not match.', $('#confirmPasswordTextbox'));
			return false;
		}

		$('.btn').attr('disabled', true);
	});
</script>

